%!PS-Adobe-2.0 EPSF-1.2

%%Title: kc-logo.zw
%%Creator: FreeHand 10.0
%%CreationDate: 05.10.2005 10:52 Uhr
%%BoundingBox: 0 0 341 116
%%FHPathName:Macintosh HD: Projekte:kettcards-kalender/karten_05:kc-logo.zw
%ALDOriginalFile:Macintosh HD: Projekte:kettcards-kalender/karten_05:kc-logo.zw
%ALDBoundingBox: -131 -568 464 273
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if 
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get 32 sub 0 exch put 
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub 
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed { 
_NXLevel2 not { 
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
} if
} if
/md defed{ 
md type /dicttype eq { 
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if 
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf 
}ifelse
/privrectpath { 
4 -2 roll m
dtransform round exch round exch idtransform 
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed 
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
false setoverprint 
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
/printerRes 
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency} 
{GrayAngle GrayFrequency} 
{0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
}
ifelse
} bdf
/nextrelease defed { 
/languagelevel defed not { 
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max 
printerRes div 
gradfrequency mul 
round 
5 max 
min 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known 
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup} 
{dup} ifelse 
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def 
{ 
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall 
NF
}bdf
/MN{
1 index length 
/Len exch def 
dup length Len add 
string dup 
Len 
4 -1 roll 
putinterval 
dup 
0 
4 -1 roll 
putinterval 
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll 
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFJ{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCJ} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup 
hasfont 
not 
{ 
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFJ{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/GS {
dup 
hasfont 
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFK 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFK{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCK} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup 
hasfont 
not 
{ 
pop
/JCsm
hasfont 
{
/JCsm
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFK{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFK 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFTC 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFTC{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCTC} 
ifelse
}bdf
/FDFTC
{
dup 
hasfont 
not 
{ 
pop
/DFMing-Lt-HK-BF
hasfont 
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFTC{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFTC 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/fps{
currentflat 
exch 
dup 0 le{pop 1}if 
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
}loop 
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf

userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
/Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog

%%BeginSetup

AltsysDict begin
_bfh 

_efh 
end %. AltsysDict

%%EndSetup
AltsysDict begin 

/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
max max max 
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{ 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx 
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop 
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
1 pop 
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 2 lt {pop 2} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop 
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
AltsysDict /cvc 2 index put 
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor} ifelse }
ifelse
}bdf 
0 setseparationgray
/imgr {1692 1584 2287.28 2425.89 } def 
/bleed 0 def 
/clpr {1692 1584 2287.28 2425.89 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 

userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-1823 -2152 translate

/currentpacking defed{false setpacking}if 
/spots[

1 0 0 0 (Process Cyan) false newcmykcustomcolor

0 1 0 0 (Process Magenta) false newcmykcustomcolor

0 0 1 0 (Process Yellow) false newcmykcustomcolor

0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
2100.2417 2266.6272 m
2100.8418 2266.6272 2106.7219 2266.3872 2107.3219 2266.3872 C
2108.7619 2266.3872 2110.922 2265.8771 2110.922 2264.2271 C
2110.922 2263.6271 2109.6282 2262.0072 2109.2982 2260.7172 C
2108.4582 2257.4471 2108.2807 2253.7699 2107.8014 2250.4155 C
2106.8419 2229.5432 L
2106.8419 2186.3753 L
2106.8419 2184.3953 2093.3716 2183.3453 2093.0416 2183.3453 C
2092.4416 2183.3453 2092.3216 2183.5853 2089.3956 2183.5944 C
2088.8766 2184.1004 2088.6015 2184.5453 2088.6015 2185.1453 C
2088.6015 2185.7453 2088.8431 2186.8451 2089.0872 2188.2287 C
2088.8766 2188.4205 2089.0815 2188.6254 2088.4815 2188.6254 C
2088.3915 2188.6254 2079.8113 2182.3852 2078.1612 2182.3852 C
2065.0209 2182.3852 2062.4409 2189.9454 2062.4409 2200.5056 C
2062.4409 2201.1057 2062.292 2202.7118 2062.682 2205.5619 C
2063.672 2212.8821 2067.631 2225.8262 2078.1912 2225.8262 C
2081.7313 2225.8262 L
2082.3313 2225.8262 2085.1809 2224.8504 2086.7889 2223.9055 C
2087.8316 2224.8658 2087.6415 2226.4862 2087.6415 2227.8663 C
2087.6415 2228.4663 2087.1615 2233.5064 2087.1615 2234.1064 C
2087.1615 2234.7064 2088.0315 2238.1822 2087.8815 2242.0222 C
2087.8215 2243.9723 2087.1615 2249.5868 2087.1615 2250.1868 C
2087.1615 2251.9868 2084.5214 2255.5869 2084.5214 2260.987 C
2084.5214 2266.5372 2090.6309 2265.8467 2093.9909 2266.1467 C
2097.351 2266.4467 2099.6417 2266.6272 2100.2417 2266.6272 C
f 
n
1823.8013 2265.4111 m
1842.0663 2265.4111 L
1842.3497 2264.6251 1842.3559 2264.2271 1842.3559 2263.6271 C
1842.3559 2263.0271 1841.6358 2257.747 1841.6358 2257.1469 C
1843.0661 2207.0332 L
1843.2807 2206.8306 1843.2807 2206.5906 1843.4124 2206.3835 C
1850.8251 2224.462 1857.8755 2245.1929 1865.7057 2263.9134 C
1866.5157 2265.8634 1868.9532 2265.0364 1870.3113 2265.187 C
1889.7685 2264.7066 L
1891.7864 2264.3755 1892.277 2262.4871 1892.277 2261.467 C
1892.277 2261.377 1859.8763 2202.3357 1859.8763 2199.7856 C
1859.8763 2197.5056 1862.1423 2193.6017 1863.0424 2191.9216 C
1869.4025 2179.8913 1884.3568 2159.4347 1884.3568 2158.6247 C
1884.3568 2157.5747 1881.7168 2156.9447 1880.7646 2156.9449 C
1869.8437 2155.5048 L
1869.3565 2155.5046 1868.3808 2155.5077 1868.1108 2156.0477 C
1862.9207 2165.648 1858.7028 2176.1298 1851.6089 2185.026 C
1850.5334 2182.7516 1848.596 2169.7849 1848.596 2168.1049 C
1848.596 2167.5049 1847.636 2161.2347 1847.636 2160.6347 C
1847.636 2155.4146 L
1847.636 2152.1745 1842.156 2153.675 1841.0459 2153.585 C
1836.4858 2153.195 1830.9556 2152.8646 1830.3556 2152.8646 C
1828.6155 2152.8646 1828.4355 2157.1847 1828.4205 2157.2747 C
1828.4205 2171.3421 L
1824.1154 2249.4664 L
1824.3556 2254.5126 1824.2655 2255.2223 1824.1155 2258.8224 C
1824.0555 2260.7425 1823.1554 2263.8671 1823.1554 2264.4671 C
1823.1554 2265.0671 1823.6003 2265.632 1823.8013 2265.4111 C
f 
n
1987.919 2265.6671 m
1988.399 2265.3671 1989.9291 2264.1419 1989.8392 2263.3887 C
1989.8392 2246.1067 L
1989.7192 2241.9366 1988.5492 2238.0665 1983.1191 2238.0665 C
1982.5191 2238.0665 1979.639 2238.5465 1979.039 2238.5465 C
1977.0889 2238.5465 1963.6918 2238.2777 1965.5965 2234.8577 C
1965.5965 2205.3117 L
1965.7179 2203.159 1965.8986 2200.9909 1966.1086 2196.4308 C
1966.1086 2196.1908 1966.1987 2195.7071 1966.6698 2157.9795 C
1965.9235 2157.2198 1965.1566 2156.9508 1964.4156 2156.7058 C
1958.1539 2156.9447 1957.9185 2156.7047 1957.6293 2156.7152 C
1956.6288 2157.825 1955.6547 2156.5543 1954.6805 2158.2334 C
1954.6805 2176.751 L
1955.8785 2189.7115 L
1955.8785 2232.4564 L
1955.8784 2234.0764 1955.8986 2235.9599 1954.9818 2237.3607 C
1950.9583 2237.3465 1950.2383 2237.3465 1945.2441 2237.3736 C
1944.7577 2232.3759 1945.043 2220.3412 1944.8336 2220.1402 C
1944.8336 2192.7077 L
1946.2645 2157.4888 L
1944.3325 2156.2433 1941.3475 2156.8353 1939.4633 2155.9873 C
1939.1981 2155.9846 1938.9635 2156.2248 1933.6693 2155.9849 C
1932.8752 2156.1368 1930.4379 2156.6452 1930.4379 2158.0252 C
1930.5279 2175.7256 1930.2579 2151.006 1931.3979 2246.3481 C
1931.4279 2249.0782 1928.4041 2247.4094 1926.9292 2248.1502 C
1913.5175 2248.3867 L
1912.9175 2248.3867 1910.611 2246.4818 1905.7181 2245.9844 C
1904.5304 2245.8637 1903.066 2246.6723 1902.842 2247.0332 C
1902.8372 2251.8668 1902.5972 2255.9469 1902.5972 2256.5469 C
1902.5972 2257.1469 1901.1572 2262.3071 1901.1572 2262.9071 C
1901.1572 2264.4071 1910.5462 2264.2271 1913.0363 2264.2271 C
1938.1169 2264.4971 1925.9676 2265.2771 1987.919 2265.6671 C
f 
n
2053.5607 2265.4271 m
2054.4007 2265.4271 2055.7207 2263.9871 2055.7207 2263.5071 C
2055.7207 2262.9071 2054.7607 2259.547 2054.7607 2258.947 C
2054.7607 2257.4769 2054.9107 2256.5469 2056.2007 2256.5469 C
2057.2208 2256.5469 2062.5609 2262.3071 2067.361 2262.3071 C
2070.8711 2262.3071 2074.9212 2261.047 2074.9212 2256.6669 C
2074.9212 2256.0669 2074.3509 2249.4597 2073.9609 2243.2195 C
2073.9309 2242.3495 2074.1411 2237.8265 2071.3211 2237.8265 C
2067.901 2237.8265 2068.981 2244.0667 2064.8409 2244.0667 C
2059.9508 2244.0667 2058.3474 2234.9814 2057.8768 2234.0755 C
2056.6801 2206.7337 L
2056.0793 2202.8573 2055.1807 2202.0657 2052.6007 2202.0657 C
2052.0006 2202.0657 2047.9128 2202.5159 2043.8327 2202.7859 C
2043.2627 2202.8159 2040.8498 2204.2123 2041.2015 2205.3292 C
2041.2015 2248.5067 L
2041.0804 2249.1068 2039.6404 2254.2669 2039.6404 2254.8669 C
2039.6404 2255.8269 2053.1107 2265.4271 2053.5607 2265.4271 C
f 
n
2145.0028 2265.4271 m
2156.1871 2264.9447 L
2158.4242 2264.1298 2162.5525 2265.9199 2163.1231 2261.7147 C
2163.1231 2250.5468 L
2163.2432 2248.1167 2162.8532 2246.2267 2160.6031 2246.2267 C
2160.0031 2246.2267 2158.6531 2246.9467 2158.0531 2246.9467 C
2148.5128 2246.9467 L
2139.6926 2246.9467 2131.8025 2236.9565 2131.8025 2229.3063 C
2131.8025 2225.3462 2134.1626 2222.3455 2138.2427 2218.6854 C
2143.7629 2213.7353 2150.5747 2207.6593 2152.9748 2201.5092 C
2153.5748 2199.9491 2154.843 2197.4756 2154.843 2196.8756 C
2154.843 2196.8756 2155.9581 2188.5925 2154.8409 2183.4946 C
2152.2881 2171.8465 2136.868 2161.6523 2134.5314 2160.6388 C
2130.0916 2158.713 2129.2298 2157.7007 2126.4398 2156.8006 C
2121.0997 2155.0306 2114.4021 2152.8646 2108.8519 2152.8646 C
2092.3162 2152.8646 L
2077.6758 2154.0646 L
2072.6711 2154.0646 L
2070.091 2154.0646 2066.281 2155.2046 2066.281 2158.7447 C
2066.281 2159.3447 2068.2019 2171.9593 2069.001 2178.4915 C
2069.4615 2178.7693 2069.761 2179.0252 2070.3611 2179.0252 C
2074.5912 2179.0252 2076.0429 2172.4244 2089.4458 2171.1049 C
2098.3091 2171.3443 L
2099.4982 2171.5827 2101.3518 2172.065 2101.9518 2172.065 C
2105.9719 2172.065 L
2119.4422 2172.065 2132.2825 2192.1355 2132.2825 2201.5857 C
2132.2825 2217.816 2116.6821 2216.736 2116.6821 2236.7465 C
2116.6821 2251.8068 2130.4824 2265.4271 2145.0028 2265.4271 C
f 
n
1900.7972 2241.6666 m
1901.3972 2241.6666 1906.6467 2241.5476 1910.1402 2240.4001 C
1923.6252 2235.9709 1926.8378 2213.916 1926.8378 2208.0658 C
1926.8378 2206.6258 1926.1778 2205.4258 1925.0377 2205.4258 C
1925.0377 2205.4258 1916.8797 2206.6701 1911.6212 2206.8606 C
1905.5153 2207.0819 1895.9704 2206.1488 1895.9704 2206.1488 C
1895.5502 2206.3701 1894.0172 2207.0395 1894.0775 2208.1843 C
1894.0775 2217.0803 L
1894.3794 2217.9896 1895.5771 2219.1061 1896.7171 2219.1061 C
1897.3171 2219.1061 1900.1972 2218.6261 1900.7972 2218.6261 C
1901.7572 2218.6261 1903.7973 2218.9861 1903.7973 2220.9061 C
1903.7973 2223.1562 1902.2972 2226.3062 1899.7172 2226.3062 C
1892.367 2226.3062 1887.9569 2210.8259 1887.9569 2207.9158 C
1887.9569 2196.6956 L
1887.9569 2192.1954 1891.767 2174.7051 1901.5172 2174.7051 C
1911.8974 2174.7051 1911.6291 2198.3653 1911.8077 2199.3253 C
1913.724 2199.9009 1917.3576 2200.1456 1917.9576 2200.1456 C
1919.3976 2200.1456 1924.9177 2200.1456 1924.9177 2197.7456 C
1924.9177 2193.0355 1922.367 2186.7222 1921.8569 2182.0121 C
1920.3869 2168.7218 1914.0275 2158.6247 1901.9672 2158.6247 C
1896.9871 2158.6247 L
1882.3168 2158.6247 1872.5965 2188.1154 1872.5965 2195.4355 C
1872.5965 2195.4355 1872.2771 2201.4875 1872.5953 2205.3355 C
1872.9515 2209.6434 1873.9667 2212.867 1874.5255 2216.2497 C
1877.3331 2233.2437 1888.1669 2241.6666 1900.7972 2241.6666 C
f 
n
1992.4724 2203.5072 m
1994.3382 2203.6429 1995.425 2203.6142 1997.263 2203.2662 C
2004.2679 2201.9402 2010.8397 2195.2255 2010.8397 2191.0254 C
2010.8397 2189.5854 2003.2495 2183.1053 2003.1595 2183.1053 C
2000.0995 2183.1053 2003.5195 2191.5054 1995.5993 2191.5054 C
1989.5392 2191.5054 1986.8392 2178.6051 1986.8392 2176.8651 C
1986.8392 2172.215 1990.0492 2168.7049 1994.0393 2168.7049 C
2000.8195 2168.7049 2000.0695 2175.4251 2003.0395 2175.4251 C
2004.8096 2175.4251 2013.4798 2165.7048 2013.4798 2163.7848 C
2013.4798 2161.3548 2010.118 2159.7735 2008.0779 2157.5534 C
2004.5679 2153.7433 1998.3594 2152.3846 1993.7993 2152.3846 C
1980.839 2152.3846 1970.9988 2162.8248 1970.9988 2173.385 C
1970.9988 2180.5852 1973.621 2193.7732 1980.6005 2198.3522 C
1984.4774 2200.8956 1987.4383 2203.1411 1992.4724 2203.5072 C
f 
n
true eomode
2013.3474 2241.906 m
2015.6303 2239.8956 2015.4834 2236.9351 2016.5774 2233.5565 C
2015.9998 2233.5064 2015.5198 2233.2664 2008.7366 2233.2843 C
2008.7366 2233.2843 2008.4397 2233.2664 2008.4397 2233.8664 C
2008.4397 2234.4664 2011.3427 2239.2171 2013.3474 2241.906 C
h
2013.3598 2267.5872 m
2014.6798 2267.5872 2015.3809 2264.9218 2016.1609 2263.6917 C
2022.4011 2253.9415 2023.2831 2242.9666 2026.7332 2233.1864 C
2030.9633 2221.2161 2035.1627 2208.8577 2039.6928 2196.7074 C
2041.3129 2192.3273 2057.1608 2160.6647 2057.1608 2158.6247 C
2057.1608 2157.4847 2056.5007 2156.2246 2055.3307 2156.2246 C
2033.3102 2156.2246 L
2032.2602 2156.2246 2029.4451 2157.2104 2029.1451 2158.2304 C
2022.725 2179.7709 2017.6559 2201.428 2010.5249 2223.0076 C
2009.728 2223.9488 2008.9197 2223.6662 2007.842 2223.6662 C
2001.8756 2223.4317 L
2000.1664 2222.2766 1994.5793 2210.9459 1990.7992 2210.9459 C
1990.1992 2210.9459 1982.2791 2211.6659 1981.679 2211.6659 C
1981.079 2211.6659 1976.8915 2211.4266 1972.2788 2210.9528 C
1971.994 2211.221 1971.4788 2211.6659 1971.4788 2212.2659 C
1971.4788 2213.5259 1984.9143 2231.4199 1989.8044 2237.7201 C
1994.1545 2243.3302 2011.1397 2267.5872 2013.3598 2267.5872 C
f 
n
vmr
vmr
end
%%Trailer
